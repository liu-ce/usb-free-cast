{"remainingRequest":"/Users/liuce/ailin-web/frontend/node_modules/babel-loader/lib/index.js!/Users/liuce/ailin-web/frontend/node_modules/eslint-loader/index.js??ref--14-0!/Users/liuce/ailin-web/frontend/src/services/api.js","dependencies":[{"path":"/Users/liuce/ailin-web/frontend/src/services/api.js","mtime":1755366472554},{"path":"/Users/liuce/ailin-web/frontend/babel.config.js","mtime":1755361438467},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1755361481592},{"path":"/Users/liuce/ailin-web/frontend/node_modules/eslint-loader/index.js","mtime":1755361481282}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKCi8vIOWIm+W7umF4aW9z5a6e5L6LCmNvbnN0IGFwaSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaScgOiAnL2FwaScsCiAgdGltZW91dDogMTAwMDAsCiAgaGVhZGVyczogewogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogIH0KfSk7CgovLyDor7fmsYLmi6bmiKrlmagKYXBpLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShjb25maWcgPT4gewogIGNvbnNvbGUubG9nKCflj5HpgIHor7fmsYI6JywgY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBjb25maWcudXJsKTsKICByZXR1cm4gY29uZmlnOwp9LCBlcnJvciA9PiB7CiAgY29uc29sZS5lcnJvcign6K+35rGC6ZSZ6K+vOicsIGVycm9yKTsKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKCi8vIOWTjeW6lOaLpuaIquWZqAphcGkuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShyZXNwb25zZSA9PiB7CiAgY29uc29sZS5sb2coJ+aUtuWIsOWTjeW6lDonLCByZXNwb25zZS5zdGF0dXMsIHJlc3BvbnNlLmNvbmZpZy51cmwpOwogIHJldHVybiByZXNwb25zZS5kYXRhOwp9LCBlcnJvciA9PiB7CiAgY29uc29sZS5lcnJvcign5ZON5bqU6ZSZ6K+vOicsIGVycm9yKTsKICBsZXQgbWVzc2FnZSA9ICfor7fmsYLlpLHotKUnOwogIGlmIChlcnJvci5yZXNwb25zZSkgewogICAgLy8g5pyN5Yqh5Zmo6L+U5Zue6ZSZ6K+v54q25oCB56CBCiAgICBzd2l0Y2ggKGVycm9yLnJlc3BvbnNlLnN0YXR1cykgewogICAgICBjYXNlIDQwMDoKICAgICAgICBtZXNzYWdlID0gJ+ivt+axguWPguaVsOmUmeivryc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNDAxOgogICAgICAgIG1lc3NhZ2UgPSAn5pyq5o6I5p2D6K6/6ZeuJzsKICAgICAgICBicmVhazsKICAgICAgY2FzZSA0MDM6CiAgICAgICAgbWVzc2FnZSA9ICforr/pl67ooqvnpoHmraInOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDQwNDoKICAgICAgICBtZXNzYWdlID0gJ+ivt+axgueahOi1hOa6kOS4jeWtmOWcqCc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgNTAwOgogICAgICAgIG1lc3NhZ2UgPSAn5pyN5Yqh5Zmo5YaF6YOo6ZSZ6K+vJzsKICAgICAgICBicmVhazsKICAgICAgZGVmYXVsdDoKICAgICAgICBtZXNzYWdlID0gYOacjeWKoeWZqOmUmeivryAoJHtlcnJvci5yZXNwb25zZS5zdGF0dXN9KWA7CiAgICB9CiAgfSBlbHNlIGlmIChlcnJvci5yZXF1ZXN0KSB7CiAgICAvLyDnvZHnu5zplJnor68KICAgIG1lc3NhZ2UgPSAn572R57uc6L+e5o6l5aSx6LSl77yM6K+35qOA5p+l572R57uc6K6+572uJzsKICB9CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KHsKICAgIG1lc3NhZ2UsCiAgICBlcnJvcgogIH0pOwp9KTsKCi8vIEFQSeaWueazlQpleHBvcnQgY29uc3QgbW9iaWxlQXBpID0gewogIC8vIOaJq+aPj+e9kee7nOiuvuWkhwogIHNjYW5OZXR3b3JrKCkgewogICAgcmV0dXJuIGFwaS5wb3N0KCcvbW9iaWxlL3NjYW4nKTsKICB9LAogIC8vIOiOt+WPluiuvuWkh+WIl+ihqAogIGdldERldmljZXMoKSB7CiAgICByZXR1cm4gYXBpLmdldCgnL21vYmlsZS9kZXZpY2VzJyk7CiAgfSwKICAvLyDojrflj5bmjIflrprorr7lpIfkv6Hmga8KICBnZXREZXZpY2UoZGV2aWNlSWQpIHsKICAgIHJldHVybiBhcGkuZ2V0KGAvbW9iaWxlL2RldmljZXMvJHtkZXZpY2VJZH1gKTsKICB9LAogIC8vIOenu+mZpOiuvuWkhwogIHJlbW92ZURldmljZShkZXZpY2VJZCkgewogICAgcmV0dXJuIGFwaS5kZWxldGUoYC9tb2JpbGUvZGV2aWNlcy8ke2RldmljZUlkfWApOwogIH0sCiAgLy8g5pu05paw572R57uc6YWN572uCiAgdXBkYXRlTmV0d29ya0NvbmZpZyhjb25maWcpIHsKICAgIHJldHVybiBhcGkucG9zdCgnL21vYmlsZS9jb25maWcvbmV0d29yaycsIGNvbmZpZyk7CiAgfSwKICAvLyDojrflj5bns7vnu5/nirbmgIEKICBnZXRTeXN0ZW1TdGF0dXMoKSB7CiAgICByZXR1cm4gYXBpLmdldCgnL21vYmlsZS9zdGF0dXMnKTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IGFwaTs="},{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","timeout","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","message","mobileApi","scanNetwork","post","getDevices","get","getDevice","deviceId","removeDevice","delete","updateNetworkConfig","getSystemStatus"],"sources":["/Users/liuce/ailin-web/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios'\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:8080/api' : '/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 请求拦截器\napi.interceptors.request.use(\n  config => {\n    console.log('发送请求:', config.method.toUpperCase(), config.url)\n    return config\n  },\n  error => {\n    console.error('请求错误:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\napi.interceptors.response.use(\n  response => {\n    console.log('收到响应:', response.status, response.config.url)\n    return response.data\n  },\n  error => {\n    console.error('响应错误:', error)\n    \n    let message = '请求失败'\n    if (error.response) {\n      // 服务器返回错误状态码\n      switch (error.response.status) {\n        case 400:\n          message = '请求参数错误'\n          break\n        case 401:\n          message = '未授权访问'\n          break\n        case 403:\n          message = '访问被禁止'\n          break\n        case 404:\n          message = '请求的资源不存在'\n          break\n        case 500:\n          message = '服务器内部错误'\n          break\n        default:\n          message = `服务器错误 (${error.response.status})`\n      }\n    } else if (error.request) {\n      // 网络错误\n      message = '网络连接失败，请检查网络设置'\n    }\n    \n    return Promise.reject({ message, error })\n  }\n)\n\n// API方法\nexport const mobileApi = {\n  // 扫描网络设备\n  scanNetwork() {\n    return api.post('/mobile/scan')\n  },\n  \n  // 获取设备列表\n  getDevices() {\n    return api.get('/mobile/devices')\n  },\n  \n  // 获取指定设备信息\n  getDevice(deviceId) {\n    return api.get(`/mobile/devices/${deviceId}`)\n  },\n  \n  // 移除设备\n  removeDevice(deviceId) {\n    return api.delete(`/mobile/devices/${deviceId}`)\n  },\n  \n  // 更新网络配置\n  updateNetworkConfig(config) {\n    return api.post('/mobile/config/network', config)\n  },\n  \n  // 获取系统状态\n  getSystemStatus() {\n    return api.get('/mobile/status')\n  }\n}\n\nexport default api"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GAAG,2BAA2B,GAAG,MAAM;EACtFC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACRC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,EAAEJ,MAAM,CAACK,GAAG,CAAC;EAC7D,OAAOL,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAjB,GAAG,CAACQ,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC3BU,QAAQ,IAAI;EACVR,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEO,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACT,MAAM,CAACK,GAAG,CAAC;EAC1D,OAAOI,QAAQ,CAACE,IAAI;AACtB,CAAC,EACDL,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAE7B,IAAIM,OAAO,GAAG,MAAM;EACpB,IAAIN,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MAC3B,KAAK,GAAG;QACNE,OAAO,GAAG,QAAQ;QAClB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,OAAO;QACjB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,OAAO;QACjB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,UAAU;QACpB;MACF,KAAK,GAAG;QACNA,OAAO,GAAG,SAAS;QACnB;MACF;QACEA,OAAO,GAAG,UAAUN,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAG;IAChD;EACF,CAAC,MAAM,IAAIJ,KAAK,CAACR,OAAO,EAAE;IACxB;IACAc,OAAO,GAAG,gBAAgB;EAC5B;EAEA,OAAOL,OAAO,CAACC,MAAM,CAAC;IAAEI,OAAO;IAAEN;EAAM,CAAC,CAAC;AAC3C,CACF,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG;EACvB;EACAC,WAAWA,CAAA,EAAG;IACZ,OAAOzB,GAAG,CAAC0B,IAAI,CAAC,cAAc,CAAC;EACjC,CAAC;EAED;EACAC,UAAUA,CAAA,EAAG;IACX,OAAO3B,GAAG,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;EACnC,CAAC;EAED;EACAC,SAASA,CAACC,QAAQ,EAAE;IAClB,OAAO9B,GAAG,CAAC4B,GAAG,CAAC,mBAAmBE,QAAQ,EAAE,CAAC;EAC/C,CAAC;EAED;EACAC,YAAYA,CAACD,QAAQ,EAAE;IACrB,OAAO9B,GAAG,CAACgC,MAAM,CAAC,mBAAmBF,QAAQ,EAAE,CAAC;EAClD,CAAC;EAED;EACAG,mBAAmBA,CAACtB,MAAM,EAAE;IAC1B,OAAOX,GAAG,CAAC0B,IAAI,CAAC,wBAAwB,EAAEf,MAAM,CAAC;EACnD,CAAC;EAED;EACAuB,eAAeA,CAAA,EAAG;IAChB,OAAOlC,GAAG,CAAC4B,GAAG,CAAC,gBAAgB,CAAC;EAClC;AACF,CAAC;AAED,eAAe5B,GAAG","ignoreList":[]}]}