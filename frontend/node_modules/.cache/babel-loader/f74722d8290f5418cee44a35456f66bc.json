{"remainingRequest":"/Users/liuce/ailin-web/frontend/node_modules/babel-loader/lib/index.js!/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuce/ailin-web/frontend/src/components/ScreenWindow.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/liuce/ailin-web/frontend/src/components/ScreenWindow.vue","mtime":1755396753253},{"path":"/Users/liuce/ailin-web/frontend/babel.config.js","mtime":1755361438467},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1755361481592},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1755361481658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["name","props","device","type","Object","required","data","hasFrame","frameCount","frameRate","lastFrameTime","frameRateTimer","imgNaturalWidth","imgNaturalHeight","watch","device.connected","newVal","computed","containerStyle","width","height","aspectRatio","screenWidth","screenHeight","statusClass","connected","status","statusText","lastUpdateText","lastUpdate","now","Date","diff","Math","floor","toLocaleTimeString","mounted","initFrameListener","startFrameRateCalculation","$nextTick","$refs","screenCanvas","canvas","beforeDestroy","removeFrameListener","stopFrameRateCalculation","methods","handleScreenFrame","event","deviceId","image","timestamp","detail","id","updateFrame","window","addEventListener","removeEventListener","drawImageToCanvas","timeDiff","instantFps","round","dataUrl","ctx","getContext","base64Data","replace","binaryString","atob","bytes","Uint8Array","length","i","charCodeAt","blob","Blob","createImageBitmap","then","imageBitmap","clearRect","drawImage","close","catch","error","console","setInterval","clearInterval","handleClick","$emit"],"sources":["src/components/ScreenWindow.vue"],"sourcesContent":["<template>\n  <div \n    class=\"screen-window\"\n    :style=\"containerStyle\"\n    :class=\"{ \n      'online': device.connected,\n      'offline': !device.connected,\n      'has-frame': hasFrame\n    }\"\n    @click=\"handleClick\"\n  >\n    <!-- 窗口头部 -->\n    <div class=\"window-header\">\n      <span class=\"window-number\">{{ String(device.id).padStart(2, '0') }}</span>\n    </div>\n    \n    <!-- 屏幕显示区域 -->\n    <div class=\"screen-display\">\n      <!-- Canvas画布 -->\n      <canvas\n        v-show=\"hasFrame\"\n        ref=\"screenCanvas\"\n        class=\"screen-canvas rotated\"\n      ></canvas>\n      \n      <!-- 占位符 -->\n      <div v-show=\"!hasFrame\" class=\"screen-placeholder\">\n        <div v-if=\"device.connected\" class=\"placeholder-loading\">\n          <i class=\"el-icon-loading\"></i>\n          <div>等待画面</div>\n        </div>\n        <div v-else class=\"placeholder-offline\">\n          <i class=\"el-icon-warning-outline\"></i>\n          <div>设备离线</div>\n        </div>\n      </div>\n      \n      <!-- 覆盖信息 -->\n      <div class=\"screen-overlay\">\n        <div class=\"overlay-info\">\n          <div class=\"device-ip\">{{ device.ip }}</div>\n          <div class=\"last-update\" v-if=\"device.lastUpdate\">\n            {{ lastUpdateText }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ScreenWindow',\n  \n  props: {\n    device: {\n      type: Object,\n      required: true\n    }\n  },\n  \n  data() {\n    return {\n      hasFrame: false,\n      frameCount: 0,\n      frameRate: 0,\n      lastFrameTime: 0,\n      frameRateTimer: null,\n      imgNaturalWidth: 0,\n      imgNaturalHeight: 0\n    }\n  },\n  \n  watch: {\n    // 监听设备连接状态变化\n    'device.connected'(newVal) {\n      if (!newVal) {\n        // 设备断开连接时，重置画面状态\n        this.hasFrame = false\n      }\n    }\n  },\n  \n  computed: {\n    // 容器尺寸：跟图片实际尺寸一样宽高\n    containerStyle() {\n      // 使用图片的实际尺寸作为容器尺寸，因为图片旋转了-90°，所以容器用旋转后的尺寸\n      if (this.imgNaturalWidth && this.imgNaturalHeight) {\n        // 图片旋转-90°后，宽高互换\n        return {\n          width: `${this.imgNaturalHeight}px`,\n          height: `${this.imgNaturalWidth}px`,\n          aspectRatio: 'auto'\n        }\n      }\n      // 如果有设备尺寸信息，优先使用\n      if (this.device.screenWidth && this.device.screenHeight) {\n        // 图片旋转-90°后，宽高互换\n        return {\n          width: `${this.device.screenHeight}px`, \n          height: `${this.device.screenWidth}px`,\n          aspectRatio: 'auto'\n        }\n      }\n      // 默认尺寸\n      return { aspectRatio: '9 / 16' }\n    },\n    statusClass() {\n      if (this.device.connected) {\n        return 'status-online'\n      } else if (this.device.status === 'connecting') {\n        return 'status-connecting'\n      } else {\n        return 'status-offline'\n      }\n    },\n    \n    statusText() {\n      if (this.device.connected) {\n        return '在线'\n      } else if (this.device.status === 'connecting') {\n        return '连接中'\n      } else {\n        return '离线'\n      }\n    },\n    \n    lastUpdateText() {\n      if (!this.device.lastUpdate) {\n        return ''\n      }\n      \n      const now = Date.now()\n      const diff = now - this.device.lastUpdate\n      \n      if (diff < 1000) {\n        return '刚刚'\n      } else if (diff < 60000) {\n        return `${Math.floor(diff / 1000)}s前`\n      } else if (diff < 3600000) {\n        return `${Math.floor(diff / 60000)}m前`\n      } else {\n        return new Date(this.device.lastUpdate).toLocaleTimeString()\n      }\n    }\n  },\n  \n  mounted() {\n    this.initFrameListener()\n    this.startFrameRateCalculation()\n    // 初始化canvas\n    this.$nextTick(() => {\n      if (this.$refs.screenCanvas) {\n        const canvas = this.$refs.screenCanvas\n        // 设置默认尺寸，避免显示异常\n        canvas.width = 100\n        canvas.height = 100\n      }\n    })\n  },\n  \n  beforeDestroy() {\n    this.removeFrameListener()\n    this.stopFrameRateCalculation()\n  },\n  \n  methods: {\n    // 初始化帧监听器\n    initFrameListener() {\n      this.handleScreenFrame = (event) => {\n        const { deviceId, image, timestamp } = event.detail\n        if (deviceId === this.device.id) {\n          this.updateFrame(image, timestamp)\n        }\n      }\n      \n      window.addEventListener('screenFrame', this.handleScreenFrame)\n    },\n    \n    // 移除帧监听器\n    removeFrameListener() {\n      if (this.handleScreenFrame) {\n        window.removeEventListener('screenFrame', this.handleScreenFrame)\n      }\n    },\n    \n    // 更新帧数据\n    updateFrame(image, timestamp) {\n      this.drawImageToCanvas(image)\n      this.frameCount++\n      \n      // 计算帧率\n      const now = Date.now()\n      if (this.lastFrameTime > 0) {\n        const timeDiff = now - this.lastFrameTime\n        if (timeDiff > 0) {\n          const instantFps = 1000 / timeDiff\n          this.frameRate = Math.round(instantFps * 10) / 10\n        }\n      }\n      this.lastFrameTime = now\n    },\n\n    // 使用Canvas绘制图片\n    drawImageToCanvas(dataUrl) {\n      if (!this.$refs.screenCanvas) return\n      \n      const canvas = this.$refs.screenCanvas\n      const ctx = canvas.getContext('2d')\n      \n      try {\n        // 提取base64数据部分\n        const base64Data = dataUrl.replace(/^data:image\\/jpeg;base64,/, '')\n        \n        // 将base64转换为二进制数据\n        const binaryString = atob(base64Data)\n        const bytes = new Uint8Array(binaryString.length)\n        for (let i = 0; i < binaryString.length; i++) {\n          bytes[i] = binaryString.charCodeAt(i)\n        }\n        \n        // 创建Blob对象\n        const blob = new Blob([bytes], { type: 'image/jpeg' })\n        \n        // 使用createImageBitmap API（避免网络面板显示）\n        createImageBitmap(blob).then(imageBitmap => {\n          // 更新图片尺寸信息（用于容器尺寸计算）\n          this.imgNaturalWidth = imageBitmap.width\n          this.imgNaturalHeight = imageBitmap.height\n          \n          // 设置canvas内部分辨率为图片原始尺寸\n          canvas.width = imageBitmap.width\n          canvas.height = imageBitmap.height\n          \n          // 清除canvas\n          ctx.clearRect(0, 0, canvas.width, canvas.height)\n          \n          // 绘制图片\n          ctx.drawImage(imageBitmap, 0, 0)\n          \n          // 清理ImageBitmap资源\n          imageBitmap.close()\n          \n          // 设置有画面标志\n          if (!this.hasFrame) {\n            this.hasFrame = true\n          }\n        }).catch(error => {\n          console.error(`设备 ${this.device.id} Canvas图片处理失败:`, error)\n          this.hasFrame = false\n        })\n        \n      } catch (error) {\n        console.error(`设备 ${this.device.id} base64解码失败:`, error)\n        this.hasFrame = false\n      }\n    },\n    \n    // 开始帧率计算\n    startFrameRateCalculation() {\n      this.frameRateTimer = setInterval(() => {\n        // 如果超过2秒没有新帧，重置帧率和画面状态\n        const now = Date.now()\n        if (now - this.lastFrameTime > 2000) {\n          this.frameRate = 0\n          // 长时间没有新帧时，重置画面状态\n          if (this.hasFrame && (now - this.lastFrameTime > 5000)) {\n            this.hasFrame = false\n          }\n        }\n      }, 1000)\n    },\n    \n    // 停止帧率计算\n    stopFrameRateCalculation() {\n      if (this.frameRateTimer) {\n        clearInterval(this.frameRateTimer)\n        this.frameRateTimer = null\n      }\n    },\n    \n\n    \n    // 点击窗口\n    handleClick() {\n      this.$emit('select', this.device)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.screen-window {\n  background: #000;\n  border-radius: 6px;\n  overflow: hidden;\n  position: relative;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border: 2px solid transparent;\n}\n\n.screen-window:hover {\n  transform: scale(1.02);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n}\n\n.screen-window.online {\n  border-color: #52c41a;\n}\n\n.screen-window.offline {\n  border-color: #f5222d;\n  background: #1a1a1a;\n}\n\n.screen-window.has-frame {\n  background: transparent;\n}\n\n/* 窗口头部 */\n.window-header {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 28px;\n  background: transparent;\n  color: white;\n  display: flex;\n  align-items: center;\n  padding: 0 8px;\n  z-index: 10;\n  font-size: 12px;\n}\n\n.window-number {\n  background: #1890ff;\n  color: white;\n  padding: 2px 6px;\n  border-radius: 3px;\n  font-weight: 600;\n  font-family: 'Courier New', monospace;\n  margin-right: 8px;\n  min-width: 24px;\n  text-align: center;\n  font-size: 11px;\n}\n\n/* 移除状态文字样式 */\n\n.window-actions {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n/* 移除fps样式 */\n\n/* 屏幕显示区域 */\n.screen-display {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.screen-canvas {\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n  background: #000;\n  max-height: 180%;\n  display: block;\n}\n\n/* 逆时针旋转90度 */\n.screen-canvas.rotated {\n  transform: rotate(-90deg);\n  transform-origin: center center;\n  width: auto;\n  height: auto;\n  max-width: 100%;\n  max-height: 180%;\n}\n\n/* 占位符 */\n.screen-placeholder {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n  text-align: center;\n}\n\n.placeholder-loading,\n.placeholder-offline {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n}\n\n.placeholder-loading i {\n  font-size: 20px;\n  color: #1890ff;\n}\n\n.placeholder-offline i {\n  font-size: 20px;\n  color: #f5222d;\n}\n\n.placeholder-loading div,\n.placeholder-offline div {\n  font-size: 11px;\n  color: #999;\n}\n\n/* 覆盖信息 */\n.screen-overlay {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));\n  color: white;\n  padding: 20px 8px 6px 8px;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.screen-window:hover .screen-overlay {\n  opacity: 1;\n}\n\n.overlay-info {\n  text-align: center;\n}\n\n.device-ip {\n  font-size: 10px;\n  font-family: 'Courier New', monospace;\n  margin-bottom: 2px;\n}\n\n.last-update {\n  font-size: 9px;\n  color: #ccc;\n}\n\n/* 响应式调整 */\n@media (max-width: 1200px) {\n  .window-header {\n    height: 24px;\n    font-size: 11px;\n  }\n  \n  .window-number {\n    font-size: 10px;\n    padding: 1px 4px;\n  }\n  \n  .frame-rate {\n    font-size: 9px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]}]}