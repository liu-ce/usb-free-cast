{"remainingRequest":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuce/ailin-web/frontend/src/components/DebugPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/liuce/ailin-web/frontend/src/components/DebugPanel.vue","mtime":1755364094738},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/babel-loader/lib/index.js","mtime":1755361481592},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1755361481658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcKaW1wb3J0IHsgbW9iaWxlQXBpIH0gZnJvbSAnQC9zZXJ2aWNlcy9hcGknCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RlYnVnUGFuZWwnLAogIAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaG93RGVidWc6IGZhbHNlLAogICAgICBtZXNzYWdlQ291bnQ6IDAsCiAgICAgIGxhc3RNZXNzYWdlOiAnJywKICAgICAgcmVjZW50TG9nczogW10sCiAgICAgIG9yaWdpbmFsQ29uc29sZToge30KICAgIH0KICB9LAogIAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ3dzQ29ubmVjdGVkJywgJ2lzU2Nhbm5pbmcnXSksCiAgICAuLi5tYXBHZXR0ZXJzKFsnZGV2aWNlQ291bnQnLCAnb25saW5lRGV2aWNlQ291bnQnXSksCiAgICAKICAgIHdzVXJsKCkgewogICAgICByZXR1cm4gYCR7dGhpcy4kV1NfQkFTRX0vd3Mvc2NyZWVuYAogICAgfQogIH0sCiAgCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuaW50ZXJjZXB0Q29uc29sZSgpCiAgICB0aGlzLmxpc3RlblRvV2ViU29ja2V0TWVzc2FnZXMoKQogIH0sCiAgCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMucmVzdG9yZUNvbnNvbGUoKQogIH0sCiAgCiAgbWV0aG9kczogewogICAgdG9nZ2xlRGVidWcoKSB7CiAgICAgIHRoaXMuc2hvd0RlYnVnID0gIXRoaXMuc2hvd0RlYnVnCiAgICB9LAogICAgCiAgICAvLyDmi6bmiKrmjqfliLblj7DovpPlh7oKICAgIGludGVyY2VwdENvbnNvbGUoKSB7CiAgICAgIHRoaXMub3JpZ2luYWxDb25zb2xlLmxvZyA9IGNvbnNvbGUubG9nCiAgICAgIHRoaXMub3JpZ2luYWxDb25zb2xlLmVycm9yID0gY29uc29sZS5lcnJvcgogICAgICB0aGlzLm9yaWdpbmFsQ29uc29sZS53YXJuID0gY29uc29sZS53YXJuCiAgICAgIAogICAgICBjb25zdCBhZGRMb2cgPSAodHlwZSwgbWVzc2FnZSkgPT4gewogICAgICAgIHRoaXMucmVjZW50TG9ncy51bnNoaWZ0KHsKICAgICAgICAgIHR5cGUsCiAgICAgICAgICB0aW1lOiBuZXcgRGF0ZSgpLnRvTG9jYWxlVGltZVN0cmluZygpLAogICAgICAgICAgbWVzc2FnZTogU3RyaW5nKG1lc3NhZ2UpCiAgICAgICAgfSkKICAgICAgICAKICAgICAgICAvLyDlj6rkv53nlZnmnIDov5ExMOadoQogICAgICAgIGlmICh0aGlzLnJlY2VudExvZ3MubGVuZ3RoID4gMTApIHsKICAgICAgICAgIHRoaXMucmVjZW50TG9ncyA9IHRoaXMucmVjZW50TG9ncy5zbGljZSgwLCAxMCkKICAgICAgICB9CiAgICAgIH0KICAgICAgCiAgICAgIGNvbnNvbGUubG9nID0gKC4uLmFyZ3MpID0+IHsKICAgICAgICB0aGlzLm9yaWdpbmFsQ29uc29sZS5sb2coLi4uYXJncykKICAgICAgICBhZGRMb2coJ2xvZycsIGFyZ3Muam9pbignICcpKQogICAgICB9CiAgICAgIAogICAgICBjb25zb2xlLmVycm9yID0gKC4uLmFyZ3MpID0+IHsKICAgICAgICB0aGlzLm9yaWdpbmFsQ29uc29sZS5lcnJvciguLi5hcmdzKQogICAgICAgIGFkZExvZygnZXJyb3InLCBhcmdzLmpvaW4oJyAnKSkKICAgICAgfQogICAgICAKICAgICAgY29uc29sZS53YXJuID0gKC4uLmFyZ3MpID0+IHsKICAgICAgICB0aGlzLm9yaWdpbmFsQ29uc29sZS53YXJuKC4uLmFyZ3MpCiAgICAgICAgYWRkTG9nKCd3YXJuJywgYXJncy5qb2luKCcgJykpCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOaBouWkjeaOp+WItuWPsAogICAgcmVzdG9yZUNvbnNvbGUoKSB7CiAgICAgIGNvbnNvbGUubG9nID0gdGhpcy5vcmlnaW5hbENvbnNvbGUubG9nCiAgICAgIGNvbnNvbGUuZXJyb3IgPSB0aGlzLm9yaWdpbmFsQ29uc29sZS5lcnJvcgogICAgICBjb25zb2xlLndhcm4gPSB0aGlzLm9yaWdpbmFsQ29uc29sZS53YXJuCiAgICB9LAogICAgCiAgICAvLyDnm5HlkKxXZWJTb2NrZXTmtojmga8KICAgIGxpc3RlblRvV2ViU29ja2V0TWVzc2FnZXMoKSB7CiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JlZW5GcmFtZScsIChldmVudCkgPT4gewogICAgICAgIHRoaXMubWVzc2FnZUNvdW50KysKICAgICAgICB0aGlzLmxhc3RNZXNzYWdlID0gYOiuvuWkhyR7ZXZlbnQuZGV0YWlsLmRldmljZUlkfeeahOWxj+W5leW4p2AKICAgICAgfSkKICAgIH0sCiAgICAKICAgIC8vIOa1i+ivlVdlYlNvY2tldAogICAgdGVzdFdlYlNvY2tldCgpIHsKICAgICAgaWYgKHRoaXMuJHdzICYmIHRoaXMuJHdzLnJlYWR5U3RhdGUgPT09IFdlYlNvY2tldC5PUEVOKSB7CiAgICAgICAgdGhpcy4kd3Muc2VuZChKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICB0eXBlOiAndGVzdCcsCiAgICAgICAgICBtZXNzYWdlOiAnV2ViU29ja2V05rWL6K+V5raI5oGvJywKICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKQogICAgICAgIH0pKQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygnV2ViU29ja2V05rWL6K+V5raI5oGv5bey5Y+R6YCBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCdXZWJTb2NrZXTmnKrov57mjqUnKQogICAgICB9CiAgICB9LAogICAgCiAgICAvLyDmtYvor5XlkI7nq69BUEkKICAgIGFzeW5jIHRlc3RCYWNrZW5kQVBJKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnNvbGUubG9nKCfwn6eqIOa1i+ivleWQjuerr0FQSei/nuaOpS4uLicpCiAgICAgICAgCiAgICAgICAgLy8g5rWL6K+V5Z+65pysQVBJ6L+e5o6lCiAgICAgICAgY29uc3QgcGluZ1Jlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy4kQVBJX0JBU0V9L3Rlc3QvcGluZ2ApCiAgICAgICAgY29uc3QgcGluZ1Jlc3VsdCA9IGF3YWl0IHBpbmdSZXNwb25zZS5qc29uKCkKICAgICAgICBjb25zb2xlLmxvZygn4pyFIOWQjuerr3BpbmfmtYvor5XmiJDlip86JywgcGluZ1Jlc3VsdCkKICAgICAgICAKICAgICAgICAvLyDmtYvor5Xns7vnu5/nirbmgIFBUEkKICAgICAgICBjb25zdCBzdGF0dXNSZXN1bHQgPSBhd2FpdCBtb2JpbGVBcGkuZ2V0U3lzdGVtU3RhdHVzKCkKICAgICAgICBjb25zb2xlLmxvZygn4pyFIOezu+e7n+eKtuaAgUFQSea1i+ivleaIkOWKnzonLCBzdGF0dXNSZXN1bHQpCiAgICAgICAgCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflkI7nq69BUEnov57mjqXmraPluLgnKQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCDlkI7nq69BUEnmtYvor5XlpLHotKU6JywgZXJyb3IpCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5ZCO56uvQVBJ6L+e5o6l5aSx6LSlOiAnICsgZXJyb3IubWVzc2FnZSkKICAgICAgfQogICAgfSwKICAgIAogICAgLy8g5rWL6K+VV2ViU29ja2V05bm/5pKtCiAgICBhc3luYyB0ZXN0V2ViU29ja2V0QnJvYWRjYXN0KCkgewogICAgICB0cnkgewogICAgICAgIGNvbnNvbGUubG9nKCfwn5OiIOa1i+ivlVdlYlNvY2tldOW5v+aSrS4uLicpCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLiRBUElfQkFTRX0vdGVzdC93ZWJzb2NrZXQtYnJvYWRjYXN0YCwgewogICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgIH0sCiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgIG1lc3NhZ2U6ICdXZWJTb2NrZXTlub/mkq3mtYvor5Xmtojmga8nCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgY29uc29sZS5sb2coJ+KchSBXZWJTb2NrZXTlub/mkq3mtYvor5XmiJDlip86JywgcmVzdWx0KQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcygnV2ViU29ja2V05bm/5pKt5rWL6K+V5oiQ5YqfJykKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgV2ViU29ja2V05bm/5pKt5rWL6K+V5aSx6LSlOicsIGVycm9yKQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ1dlYlNvY2tldOW5v+aSrea1i+ivleWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOWPkemAgeaooeaLn+W4pwogICAgYXN5bmMgc2VuZE1vY2tGcmFtZSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zb2xlLmxvZygn8J+WvO+4jyDlj5HpgIHmqKHmi5/lsY/luZXluKcuLi4nKQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy4kQVBJX0JBU0V9L3Rlc3Qvc2VuZC1tb2NrLWZyYW1lYCwgewogICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgIH0sCiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgIGRldmljZUlkOiAxCiAgICAgICAgICB9KQogICAgICAgIH0pCiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpCiAgICAgICAgY29uc29sZS5sb2coJ+KchSDmqKHmi5/luKflj5HpgIHmiJDlip86JywgcmVzdWx0KQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5qih5ouf5bin5Y+R6YCB5oiQ5YqfJykKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCfinYwg5qih5ouf5bin5Y+R6YCB5aSx6LSlOicsIGVycm9yKQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aooeaLn+W4p+WPkemAgeWksei0pTogJyArIGVycm9yLm1lc3NhZ2UpCiAgICAgIH0KICAgIH0sCiAgICAKICAgIC8vIOmHjei/nldlYlNvY2tldAogICAgcmVjb25uZWN0V2ViU29ja2V0KCkgewogICAgICBjb25zb2xlLmxvZygn8J+UhCDmiYvliqjph43ov55XZWJTb2NrZXQuLi4nKQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY29ubmVjdFdlYlNvY2tldCcpCiAgICAgIHRoaXMuJG1lc3NhZ2UuaW5mbygn5q2j5Zyo6YeN6L+eV2ViU29ja2V0Li4uJykKICAgIH0sCiAgICAKICAgIC8vIOa4hemZpOaXpeW/lwogICAgY2xlYXJMb2dzKCkgewogICAgICB0aGlzLnJlY2VudExvZ3MgPSBbXQogICAgICB0aGlzLm1lc3NhZ2VDb3VudCA9IDAKICAgICAgdGhpcy5sYXN0TWVzc2FnZSA9ICcnCiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5pel5b+X5bey5riF6ZmkJykKICAgIH0KICB9Cn0K"},{"version":3,"sources":["DebugPanel.vue"],"names":[],"mappings":";AAkfile":"DebugPanel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"debug-panel\" v-if=\"showDebug\">\n    <div class=\"debug-header\">\n      <span>üêõ Ë∞ÉËØïÈù¢Êùø</span>\n      <el-button type=\"text\" size=\"mini\" @click=\"toggleDebug\">\n        {{ showDebug ? 'ÈöêËóè' : 'ÊòæÁ§∫' }}\n      </el-button>\n    </div>\n    \n    <div class=\"debug-content\">\n      <div class=\"debug-section\">\n        <h4>üì° WebSocketÁä∂ÊÄÅ</h4>\n        <div class=\"status-item\">\n          <span class=\"label\">ËøûÊé•Áä∂ÊÄÅ:</span>\n          <span :class=\"['status', wsConnected ? 'connected' : 'disconnected']\">\n            {{ wsConnected ? '‚úÖ Â∑≤ËøûÊé•' : '‚ùå Êú™ËøûÊé•' }}\n          </span>\n        </div>\n        <div class=\"status-item\">\n          <span class=\"label\">WebSocket URL:</span>\n          <span class=\"value\">{{ wsUrl }}</span>\n        </div>\n        <div class=\"status-item\">\n          <span class=\"label\">Êî∂Âà∞Ê∂àÊÅØÊï∞:</span>\n          <span class=\"value\">{{ messageCount }}</span>\n        </div>\n        <div class=\"status-item\">\n          <span class=\"label\">ÊúÄÂêéÊ∂àÊÅØ:</span>\n          <span class=\"value\">{{ lastMessage || 'Êó†' }}</span>\n        </div>\n      </div>\n      \n      <div class=\"debug-section\">\n        <h4>üì± ËÆæÂ§áÁä∂ÊÄÅ</h4>\n        <div class=\"status-item\">\n          <span class=\"label\">ËÆæÂ§áÊÄªÊï∞:</span>\n          <span class=\"value\">{{ deviceCount }}</span>\n        </div>\n        <div class=\"status-item\">\n          <span class=\"label\">Âú®Á∫øËÆæÂ§á:</span>\n          <span class=\"value\">{{ onlineDeviceCount }}</span>\n        </div>\n        <div class=\"status-item\">\n          <span class=\"label\">Êâ´ÊèèÁä∂ÊÄÅ:</span>\n          <span class=\"value\">{{ isScanning ? 'üîç Êâ´Êèè‰∏≠' : '‚è∏Ô∏è Á©∫Èó≤' }}</span>\n        </div>\n      </div>\n      \n      <div class=\"debug-section\">\n        <h4>üîß ÊµãËØïÂäüËÉΩ</h4>\n        <div class=\"test-buttons\">\n          <el-button size=\"mini\" @click=\"testWebSocket\">ÊµãËØïWebSocket</el-button>\n          <el-button size=\"mini\" @click=\"testBackendAPI\">ÊµãËØïÂêéÁ´ØAPI</el-button>\n          <el-button size=\"mini\" @click=\"testWebSocketBroadcast\">ÊµãËØïÂπøÊí≠</el-button>\n          <el-button size=\"mini\" @click=\"sendMockFrame\">ÂèëÈÄÅÊ®°ÊãüÂ∏ß</el-button>\n          <el-button size=\"mini\" @click=\"reconnectWebSocket\">ÈáçËøûWebSocket</el-button>\n          <el-button size=\"mini\" @click=\"clearLogs\">Ê∏ÖÈô§Êó•Âøó</el-button>\n        </div>\n      </div>\n      \n      <div class=\"debug-section\">\n        <h4>üìù ÊéßÂà∂Âè∞Êó•Âøó (ÊúÄËøë10Êù°)</h4>\n        <div class=\"log-container\">\n          <div \n            v-for=\"(log, index) in recentLogs\" \n            :key=\"index\"\n            :class=\"['log-item', log.type]\"\n          >\n            <span class=\"log-time\">{{ log.time }}</span>\n            <span class=\"log-message\">{{ log.message }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"debug-toggle\" @click=\"showDebug = !showDebug\">\n    üêõ\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex'\nimport { mobileApi } from '@/services/api'\n\nexport default {\n  name: 'DebugPanel',\n  \n  data() {\n    return {\n      showDebug: false,\n      messageCount: 0,\n      lastMessage: '',\n      recentLogs: [],\n      originalConsole: {}\n    }\n  },\n  \n  computed: {\n    ...mapState(['wsConnected', 'isScanning']),\n    ...mapGetters(['deviceCount', 'onlineDeviceCount']),\n    \n    wsUrl() {\n      return `${this.$WS_BASE}/ws/screen`\n    }\n  },\n  \n  mounted() {\n    this.interceptConsole()\n    this.listenToWebSocketMessages()\n  },\n  \n  beforeDestroy() {\n    this.restoreConsole()\n  },\n  \n  methods: {\n    toggleDebug() {\n      this.showDebug = !this.showDebug\n    },\n    \n    // Êã¶Êà™ÊéßÂà∂Âè∞ËæìÂá∫\n    interceptConsole() {\n      this.originalConsole.log = console.log\n      this.originalConsole.error = console.error\n      this.originalConsole.warn = console.warn\n      \n      const addLog = (type, message) => {\n        this.recentLogs.unshift({\n          type,\n          time: new Date().toLocaleTimeString(),\n          message: String(message)\n        })\n        \n        // Âè™‰øùÁïôÊúÄËøë10Êù°\n        if (this.recentLogs.length > 10) {\n          this.recentLogs = this.recentLogs.slice(0, 10)\n        }\n      }\n      \n      console.log = (...args) => {\n        this.originalConsole.log(...args)\n        addLog('log', args.join(' '))\n      }\n      \n      console.error = (...args) => {\n        this.originalConsole.error(...args)\n        addLog('error', args.join(' '))\n      }\n      \n      console.warn = (...args) => {\n        this.originalConsole.warn(...args)\n        addLog('warn', args.join(' '))\n      }\n    },\n    \n    // ÊÅ¢Â§çÊéßÂà∂Âè∞\n    restoreConsole() {\n      console.log = this.originalConsole.log\n      console.error = this.originalConsole.error\n      console.warn = this.originalConsole.warn\n    },\n    \n    // ÁõëÂê¨WebSocketÊ∂àÊÅØ\n    listenToWebSocketMessages() {\n      window.addEventListener('screenFrame', (event) => {\n        this.messageCount++\n        this.lastMessage = `ËÆæÂ§á${event.detail.deviceId}ÁöÑÂ±èÂπïÂ∏ß`\n      })\n    },\n    \n    // ÊµãËØïWebSocket\n    testWebSocket() {\n      if (this.$ws && this.$ws.readyState === WebSocket.OPEN) {\n        this.$ws.send(JSON.stringify({\n          type: 'test',\n          message: 'WebSocketÊµãËØïÊ∂àÊÅØ',\n          timestamp: Date.now()\n        }))\n        this.$message.success('WebSocketÊµãËØïÊ∂àÊÅØÂ∑≤ÂèëÈÄÅ')\n      } else {\n        this.$message.error('WebSocketÊú™ËøûÊé•')\n      }\n    },\n    \n    // ÊµãËØïÂêéÁ´ØAPI\n    async testBackendAPI() {\n      try {\n        console.log('üß™ ÊµãËØïÂêéÁ´ØAPIËøûÊé•...')\n        \n        // ÊµãËØïÂü∫Êú¨APIËøûÊé•\n        const pingResponse = await fetch(`${this.$API_BASE}/test/ping`)\n        const pingResult = await pingResponse.json()\n        console.log('‚úÖ ÂêéÁ´ØpingÊµãËØïÊàêÂäü:', pingResult)\n        \n        // ÊµãËØïÁ≥ªÁªüÁä∂ÊÄÅAPI\n        const statusResult = await mobileApi.getSystemStatus()\n        console.log('‚úÖ Á≥ªÁªüÁä∂ÊÄÅAPIÊµãËØïÊàêÂäü:', statusResult)\n        \n        this.$message.success('ÂêéÁ´ØAPIËøûÊé•Ê≠£Â∏∏')\n      } catch (error) {\n        console.error('‚ùå ÂêéÁ´ØAPIÊµãËØïÂ§±Ë¥•:', error)\n        this.$message.error('ÂêéÁ´ØAPIËøûÊé•Â§±Ë¥•: ' + error.message)\n      }\n    },\n    \n    // ÊµãËØïWebSocketÂπøÊí≠\n    async testWebSocketBroadcast() {\n      try {\n        console.log('üì¢ ÊµãËØïWebSocketÂπøÊí≠...')\n        const response = await fetch(`${this.$API_BASE}/test/websocket-broadcast`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: 'WebSocketÂπøÊí≠ÊµãËØïÊ∂àÊÅØ'\n          })\n        })\n        const result = await response.json()\n        console.log('‚úÖ WebSocketÂπøÊí≠ÊµãËØïÊàêÂäü:', result)\n        this.$message.success('WebSocketÂπøÊí≠ÊµãËØïÊàêÂäü')\n      } catch (error) {\n        console.error('‚ùå WebSocketÂπøÊí≠ÊµãËØïÂ§±Ë¥•:', error)\n        this.$message.error('WebSocketÂπøÊí≠ÊµãËØïÂ§±Ë¥•: ' + error.message)\n      }\n    },\n    \n    // ÂèëÈÄÅÊ®°ÊãüÂ∏ß\n    async sendMockFrame() {\n      try {\n        console.log('üñºÔ∏è ÂèëÈÄÅÊ®°ÊãüÂ±èÂπïÂ∏ß...')\n        const response = await fetch(`${this.$API_BASE}/test/send-mock-frame`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            deviceId: 1\n          })\n        })\n        const result = await response.json()\n        console.log('‚úÖ Ê®°ÊãüÂ∏ßÂèëÈÄÅÊàêÂäü:', result)\n        this.$message.success('Ê®°ÊãüÂ∏ßÂèëÈÄÅÊàêÂäü')\n      } catch (error) {\n        console.error('‚ùå Ê®°ÊãüÂ∏ßÂèëÈÄÅÂ§±Ë¥•:', error)\n        this.$message.error('Ê®°ÊãüÂ∏ßÂèëÈÄÅÂ§±Ë¥•: ' + error.message)\n      }\n    },\n    \n    // ÈáçËøûWebSocket\n    reconnectWebSocket() {\n      console.log('üîÑ ÊâãÂä®ÈáçËøûWebSocket...')\n      this.$store.dispatch('connectWebSocket')\n      this.$message.info('Ê≠£Âú®ÈáçËøûWebSocket...')\n    },\n    \n    // Ê∏ÖÈô§Êó•Âøó\n    clearLogs() {\n      this.recentLogs = []\n      this.messageCount = 0\n      this.lastMessage = ''\n      this.$message.success('Êó•ÂøóÂ∑≤Ê∏ÖÈô§')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.debug-panel {\n  position: fixed;\n  top: 70px;\n  right: 10px;\n  width: 350px;\n  max-height: calc(100vh - 80px);\n  background: white;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  overflow: hidden;\n}\n\n.debug-header {\n  padding: 12px 16px;\n  background: #f5f5f5;\n  border-bottom: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n}\n\n.debug-content {\n  max-height: calc(100vh - 140px);\n  overflow-y: auto;\n  padding: 16px;\n}\n\n.debug-section {\n  margin-bottom: 20px;\n}\n\n.debug-section h4 {\n  margin: 0 0 10px 0;\n  font-size: 14px;\n  color: #333;\n}\n\n.status-item {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 6px;\n  font-size: 12px;\n}\n\n.label {\n  color: #666;\n  font-weight: 500;\n}\n\n.value {\n  color: #333;\n  font-family: 'Courier New', monospace;\n}\n\n.status.connected {\n  color: #52c41a;\n}\n\n.status.disconnected {\n  color: #f5222d;\n}\n\n.test-buttons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 6px;\n}\n\n.log-container {\n  max-height: 150px;\n  overflow-y: auto;\n  background: #f8f8f8;\n  border-radius: 4px;\n  padding: 8px;\n}\n\n.log-item {\n  font-size: 11px;\n  margin-bottom: 4px;\n  display: flex;\n  gap: 8px;\n}\n\n.log-time {\n  color: #999;\n  min-width: 60px;\n}\n\n.log-message {\n  color: #333;\n  word-break: break-all;\n}\n\n.log-item.error .log-message {\n  color: #f5222d;\n}\n\n.log-item.warn .log-message {\n  color: #faad14;\n}\n\n.debug-toggle {\n  position: fixed;\n  top: 70px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  background: #1890ff;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  font-size: 16px;\n  z-index: 999;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n}\n\n.debug-toggle:hover {\n  background: #40a9ff;\n}\n</style>"]}]}