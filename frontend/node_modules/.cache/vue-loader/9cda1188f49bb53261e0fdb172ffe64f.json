{"remainingRequest":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuce/ailin-web/frontend/src/components/StatusBar.vue?vue&type=style&index=0&id=4e428641&scoped=true&lang=css","dependencies":[{"path":"/Users/liuce/ailin-web/frontend/src/components/StatusBar.vue","mtime":1755365490496},{"path":"/Users/liuce/ailin-web/frontend/node_modules/css-loader/dist/cjs.js","mtime":1755361481445},{"path":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1755361481927},{"path":"/Users/liuce/ailin-web/frontend/node_modules/postcss-loader/src/index.js","mtime":1755361481585},{"path":"/Users/liuce/ailin-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1755361481208},{"path":"/Users/liuce/ailin-web/frontend/node_modules/vue-loader/lib/index.js","mtime":1755361481658}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdGF0dXMtYmFyIHsKICBoZWlnaHQ6IDMycHg7CiAgYmFja2dyb3VuZDogI2YwZjBmMDsKICBib3JkZXItdG9wOiAxcHggc29saWQgI2Q5ZDlkOTsKICBwYWRkaW5nOiAwIDE2cHg7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6ICM2NjY7Cn0KCi5zdGF0dXMtbGVmdCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGdhcDogMjBweDsKfQoKLnN0YXR1cy1yaWdodCB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Cgouc3RhdHVzLWl0ZW0gewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBnYXA6IDRweDsKfQoKLnN0YXR1cy12YWx1ZSB7CiAgZm9udC13ZWlnaHQ6IDYwMDsKICBjb2xvcjogIzI2MjYyNjsKfQoKLnN0YXR1cy12YWx1ZS5zdWNjZXNzIHsKICBjb2xvcjogIzUyYzQxYTsKfQoKLnN0YXR1cy12YWx1ZS5lcnJvciB7CiAgY29sb3I6ICNmNTIyMmQ7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkgewogIC5zdGF0dXMtYmFyIHsKICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgICBoZWlnaHQ6IGF1dG87CiAgICBwYWRkaW5nOiA4cHggMTZweDsKICAgIGdhcDogNHB4OwogIH0KICAKICAuc3RhdHVzLWxlZnQgewogICAgZmxleC13cmFwOiB3cmFwOwogICAgZ2FwOiAxMnB4OwogIH0KfQo="},{"version":3,"sources":["StatusBar.vue"],"names":[],"mappings":";AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"StatusBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"status-bar\">\n    <div class=\"status-left\">\n      <span class=\"status-item\">\n        状态: \n        <span class=\"status-value\" :style=\"{ color: statusColor }\">{{ statusText }}</span>\n      </span>\n      \n      <span class=\"status-item\">\n        在线设备: \n        <span class=\"status-value success\">{{ onlineCount }}</span>\n      </span>\n      \n      <span class=\"status-item\">\n        离线设备: \n        <span class=\"status-value error\">{{ offlineCount }}</span>\n      </span>\n      \n      <span class=\"status-item\">\n        总设备数: \n        <span class=\"status-value\">{{ totalCount }}</span>\n      </span>\n    </div>\n    \n    <div class=\"status-right\">\n      <span class=\"status-item\">\n        刷新时间: {{ updateTime }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex'\n\nexport default {\n  name: 'StatusBar',\n  \n  data() {\n    return {\n      updateTime: ''\n    }\n  },\n  \n  computed: {\n    ...mapState(['wsConnected']),\n    ...mapGetters(['deviceCount', 'onlineDeviceCount']),\n    \n    statusText() {\n      return this.wsConnected ? '正常' : '断开'\n    },\n    \n    statusColor() {\n      return this.wsConnected ? '#52c41a' : '#f5222d'\n    },\n    \n    totalCount() {\n      return this.deviceCount\n    },\n    \n    onlineCount() {\n      return this.onlineDeviceCount\n    },\n    \n    offlineCount() {\n      return this.deviceCount - this.onlineDeviceCount\n    }\n  },\n  \n  mounted() {\n    this.updateCurrentTime()\n    this.timer = setInterval(this.updateCurrentTime, 1000)\n  },\n  \n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n  },\n  \n  methods: {\n    updateCurrentTime() {\n      const now = new Date()\n      this.updateTime = now.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.status-bar {\n  height: 32px;\n  background: #f0f0f0;\n  border-top: 1px solid #d9d9d9;\n  padding: 0 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 12px;\n  color: #666;\n}\n\n.status-left {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.status-right {\n  display: flex;\n  align-items: center;\n}\n\n.status-item {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n}\n\n.status-value {\n  font-weight: 600;\n  color: #262626;\n}\n\n.status-value.success {\n  color: #52c41a;\n}\n\n.status-value.error {\n  color: #f5222d;\n}\n\n@media (max-width: 768px) {\n  .status-bar {\n    flex-direction: column;\n    height: auto;\n    padding: 8px 16px;\n    gap: 4px;\n  }\n  \n  .status-left {\n    flex-wrap: wrap;\n    gap: 12px;\n  }\n}\n</style>"]}]}